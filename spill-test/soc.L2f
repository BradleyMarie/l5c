(((i <- 0)

  :compare
  (cjump i < 5 :funcCall :done)

  :funcCall

  ;;generate args and run function
  (eax <- i)
  (ebx <- eax)
  (ecx <- i)
  (ebx *= 2)
  (ecx *= 3)
  (call :soc)

  ;; encode result
  (eax <<= 1)
  (eax += 1)
  
  ;; print
  (eax <- (print eax))
  
  (i += 1)
  (goto :compare)

  :done)

 (:soc
  (a <- eax)
  (a *= a)
  (a *= a)

  (b <- ebx)
  (b *= b)
  (b *= b)

  (c <- ecx)
  (c *= c)
  (c *= c)

  (a += b)
  (a += c)
  (eax <- a)
  (return)))
